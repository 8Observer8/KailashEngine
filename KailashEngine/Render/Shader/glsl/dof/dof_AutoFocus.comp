
layout (local_size_x = 1) in;

layout (std430, binding=0) buffer fd
{
	vec2 focusDistance[];
};

layout (size4x32, binding = 1) readonly uniform image2D sampler1;

uniform float linearDepth;
uniform float focusDelay;

float slerp(float start, float dest, float delay)
{
	float start2 = max(start, 0.001);
    return pow(dest / start2, delay) * start2;
}

void main() 
{
	ivec2 imageSize = imageSize(sampler1);
	ivec2 imageSize_half = imageSize / ivec2(2.0);

	float curFocusDistance = imageLoad(sampler1, imageSize_half).a / linearDepth;
	float oldFocusDistance = focusDistance[0].x;

    curFocusDistance = slerp(oldFocusDistance, curFocusDistance, focusDelay);
	oldFocusDistance = curFocusDistance;

	focusDistance[0] = vec2(oldFocusDistance, curFocusDistance);
}




